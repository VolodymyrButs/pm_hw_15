{"version":3,"sources":["contextProvider.js","components/common.js","pages/PersonalPage.js","pages/JobsPage.js","pages/StudyPage.js","pages/ResumePage.js","index.js"],"names":["myContext","React","createContext","initState","personal","firstName","lastName","phone","email","jobs","name","position","startDate","finishDate","study","specialty","ContextProvider","props","useReducer","state","action","type","data","Error","formData","dispatch","Provider","value","children","Title","styled","h1","SubTitle","FormBlock","div","BottomBlock","Button","button","getToday","today","Date","day","getDate","mon","getMonth","toString","yr","getFullYear","length","getTodayMonth","Form","form","FormPersonal","setFormStep","useContext","useState","firstNameValue","setFirstNameValue","lastNameValue","setlastNameValue","phoneValue","setPhoneValue","emailValue","setEmailValue","onSubmit","e","preventDefault","id","defaultValue","required","onChange","target","minLength","placeholder","htmlFor","pattern","title","FormStyled","Label","label","schema","Yup","shape","of","min","max","JobsPage","initialValues","validationSchema","values","window","alert","render","arrayHelpers","map","_","index","component","className","onClick","confirm","remove","handleRemove","push","StudyPage","Wrapper","LeftSide","Main","Logo","Name","Link","a","ItemWrapper","Count","ButtonWrapper","ResumePage","charAt","href","item","replaceAll","App","formStep","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5ecda47d.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\nexport const myContext = React.createContext();\n\nconst initState = {\n  personal: { firstName: \"\", lastName: \"\", phone: \"\", email: \"\" },\n  jobs: [\n    {\n      name: \"\",\n      position: \"\",\n      startDate: \"\",\n      finishDate: \"\",\n    },\n  ],\n  study: [\n    {\n      name: \"\",\n      specialty: \"\",\n      startDate: \"\",\n      finishDate: \"\",\n    },\n  ],\n};\nconst ContextProvider = (props) => {\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"addPersonal\":\n        return {\n          ...state,\n          personal: action.data,\n        };\n      case \"addJobs\":\n        return {\n          ...state,\n          jobs: action.data,\n        };\n      case \"addStudy\":\n        return {\n          ...state,\n          study: action.data,\n        };\n      default:\n        throw new Error();\n    }\n  }\n  const [formData, dispatch] = useReducer(reducer, initState);\n\n  return (\n    <myContext.Provider\n      value={{\n        formData,\n        dispatch,\n      }}\n    >\n      {props.children}\n    </myContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  width: 100%;\n  text-align: center;\n`;\nexport const SubTitle = styled(Title)`\n  font-size: 20px;\n`;\nexport const FormBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #333;\n  border-radius: 10px;\n  padding: 20px;\n  margin: 5px 0;\n  button {\n    align-self: flex-end;\n  }\n`;\nexport const BottomBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 12px;\n`;\nexport const Button = styled.button`\n  background-color: #333;\n  padding: 5px 8px;\n  color: #fff;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  :focus {\n    outline: none;\n  }\n  cursor: pointer;\n`;\nexport const getToday = () => {\n  let today = new Date();\n  let day = today.getDate();\n\n  // Set month to string to add leading 0\n  var mon = (today.getMonth() + 1).toString(); //January is 0!\n  var yr = today.getFullYear();\n\n  if (mon.length < 2) {\n    mon = \"0\" + mon;\n  }\n  if (day.length < 2) {\n    day = \"0\" + day;\n  }\n\n  var date = yr + \"-\" + mon + \"-\" + day;\n  return date;\n};\n\nexport const getTodayMonth = () => {\n  let today = new Date();\n\n  var mon = (today.getMonth() + 1).toString();\n  var yr = today.getFullYear();\n\n  if (mon.length < 2) {\n    mon = \"0\" + mon;\n  }\n\n  var date = yr + \"-\" + mon;\n  return date;\n};\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { myContext } from \"../contextProvider\";\nimport {\n  Title,\n  SubTitle,\n  Button,\n  FormBlock,\n  BottomBlock,\n} from \"../components/common\";\n\nconst Form = styled.form`\n  width: 500px;\n  margin: 30px auto;\n  display: flex;\n  flex-direction: column;\n  label {\n    font-size: 10px;\n    margin: 2px 0 10px 5px;\n  }\n`;\n\nconst FormPersonal = ({ setFormStep }) => {\n  const { formData, dispatch } = useContext(myContext);\n  const { firstName, lastName, phone, email } = formData.personal;\n  const [firstNameValue, setFirstNameValue] = useState(firstName);\n  const [lastNameValue, setlastNameValue] = useState(lastName);\n  const [phoneValue, setPhoneValue] = useState(phone);\n  const [emailValue, setEmailValue] = useState(email);\n  const data = {\n    firstName: firstNameValue,\n    lastName: lastNameValue,\n    phone: phoneValue,\n    email: emailValue,\n  };\n\n  return (\n    <>\n      <Title>Create your own resume</Title>\n      <SubTitle>Input your persohal data</SubTitle>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          dispatch({ type: \"addPersonal\", data: data });\n\n          setFormStep(1);\n        }}\n      >\n        <FormBlock>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            defaultValue={firstNameValue ? firstNameValue : \"\"}\n            required\n            onChange={(e) => setFirstNameValue(e.target.value)}\n            minLength={3}\n            placeholder=\"Input first name (min 3 characters)\"\n          />\n          <label htmlFor=\"firstName\">First Name</label>\n\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            defaultValue={lastNameValue ? lastNameValue : \"\"}\n            required\n            onChange={(e) => setlastNameValue(e.target.value)}\n            minLength={3}\n            placeholder=\"Input last name (min 3 characters)\"\n          />\n          <label htmlFor=\"lastName\">Last Name</label>\n\n          <input\n            type=\"phone\"\n            id=\"phone\"\n            defaultValue={phoneValue ? phoneValue : \"\"}\n            required\n            pattern=\"\\+380+[0-9]{9}\"\n            onChange={(e) => setPhoneValue(e.target.value)}\n            placeholder=\"Input number (+380XXXXXXXXX)\"\n            title=\"Format requested +380XXXXXXXXX\"\n          />\n          <label htmlFor=\"phone\">Phone number</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            defaultValue={emailValue ? emailValue : \"\"}\n            required\n            onChange={(e) => setEmailValue(e.target.value)}\n            placeholder=\"Input email\"\n          />\n          <label htmlFor=\"email\">Email adress</label>\n        </FormBlock>\n        <BottomBlock>\n          <p></p>\n          <Button type=\"submit\">SAVE AND GO TO NEXT PAGE</Button>\n        </BottomBlock>\n      </Form>\n    </>\n  );\n};\n\nexport default FormPersonal;\n","import React, { useContext } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nimport { myContext } from \"../contextProvider\";\nimport {\n  Title,\n  SubTitle,\n  FormBlock,\n  BottomBlock,\n  Button,\n  getTodayMonth,\n} from \"../components/common\";\n\nconst FormStyled = styled(Form)`\n  width: 500px;\n  margin: 0 auto;\n`;\n\nconst Label = styled.label`\n  input {\n    width: 100%;\n  }\n  p {\n    margin: 2px 0 10px 5px;\n    font-size: 10px;\n  }\n  span {\n    color: red;\n    font-size: 10px;\n  }\n`;\n\nconst schema = Yup.object().shape({\n  jobs: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string().min(3, \"too short\").required(\"Required\"), // these constraints take precedence\n      position: Yup.string().min(3, \"too short\").required(\"Required\"), // these constraints take precedence\n      startDate: Yup.date()\n        .min(\"01-01-1970\", \"Scould be after 01-01-1970\")\n        .max(new Date(), \"Scould be before today\")\n        .max(Yup.ref(\"finishDate\"), \"Start scould be before finish\")\n        .required(\"Required\"),\n      finishDate: Yup.date()\n        .min(\"01-01-1970\", \"Scould be after 01-01-1970\")\n        .max(new Date(), \"Scould be before today\")\n        .required(\"Required\"),\n    })\n  ),\n});\n\nconst JobsPage = ({ setFormStep }) => {\n  const { formData, dispatch } = useContext(myContext);\n  const handleRemove = (arrayHelpers, index) => {\n    let deleteJob = window.confirm(\"You really wont delete this JOB\");\n    if (deleteJob) {\n      return arrayHelpers.remove(index);\n    }\n  };\n\n  return (\n    <div>\n      <Title>Work experience</Title>\n      <SubTitle>Input your jobs data</SubTitle>\n      <Formik\n        initialValues={{ jobs: formData.jobs }}\n        validationSchema={schema}\n        onSubmit={(values) => {\n          if (values.jobs.length) {\n            dispatch({ type: \"addJobs\", data: values.jobs });\n\n            setFormStep(2);\n          } else {\n            window.alert(\"Add at list 1 job\");\n          }\n        }}\n        render={({ values }) => (\n          <FormStyled>\n            <FieldArray\n              name=\"jobs\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.jobs.map((_, index) => {\n                    return (\n                      <FormBlock key={index}>\n                        <Label>\n                          <ErrorMessage\n                            name={`jobs.${index}.name`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field type=\"text\" name={`jobs.${index}.name`} />\n                          <p>Company name</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`jobs.${index}.position`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field type=\"text\" name={`jobs.${index}.position`} />\n                          <p>Position</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`jobs.${index}.startDate`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field\n                            type=\"month\"\n                            name={`jobs.${index}.startDate`}\n                            max={getTodayMonth()}\n                          />\n                          <p>Start Date</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`jobs.${index}.finishDate`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field\n                            type=\"month\"\n                            name={`jobs.${index}.finishDate`}\n                            max={getTodayMonth()}\n                          />\n                          <p>Finish Date</p>\n                        </Label>\n                        <Button\n                          onClick={() => handleRemove(arrayHelpers, index)} // remove a friend from the list\n                        >\n                          Remove\n                        </Button>\n                      </FormBlock>\n                    );\n                  })}\n                  <BottomBlock>\n                    <Button onClick={() => setFormStep(0)}>GO BACK</Button>\n                    <Button\n                      type=\"button\"\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: \"\",\n                          position: \"\",\n                          startDate: \"\",\n                          finishDate: \"\",\n                        })\n                      }\n                    >\n                      Add a job\n                    </Button>\n\n                    <div>\n                      <Button type=\"submit\">SAVE AND GO TO NEXT PAGE</Button>\n                    </div>\n                  </BottomBlock>\n                </div>\n              )}\n            />\n          </FormStyled>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default JobsPage;\n","import React, { useContext } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nimport { myContext } from \"../contextProvider\";\nimport {\n  Title,\n  SubTitle,\n  FormBlock,\n  BottomBlock,\n  Button,\n  getToday,\n} from \"../components/common\";\n\nconst FormStyled = styled(Form)`\n  width: 500px;\n  margin: 0 auto;\n`;\n\nconst Label = styled.label`\n  input {\n    width: 100%;\n  }\n  p {\n    margin: 2px 0 10px 5px;\n    font-size: 10px;\n  }\n  span {\n    color: red;\n    font-size: 10px;\n  }\n`;\n\nconst schema = Yup.object().shape({\n  study: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string().min(3, \"too short\").required(\"Required\"), // these constraints take precedence\n      specialty: Yup.string().min(3, \"too short\").required(\"Required\"), // these constraints take precedence\n      startDate: Yup.date()\n        .min(\"01-01-1970\", \"Scould be after 01-01-1970\")\n        .max(new Date(), \"Scould be before today\")\n        .max(Yup.ref(\"finishDate\"), \"Start scould be before finish\")\n        .required(\"Required\"),\n      finishDate: Yup.date()\n        .min(\"01-01-1970\", \"Scould be after 01-01-1970\")\n        .max(new Date(), \"Scould be before today\")\n        .required(\"Required\"),\n    })\n  ),\n});\n\nconst StudyPage = ({ setFormStep }) => {\n  const { formData, dispatch } = useContext(myContext);\n  const handleRemove = (arrayHelpers, index) => {\n    let deleteStudy = window.confirm(\"You really wont delete this STUDY\");\n    if (deleteStudy) {\n      return arrayHelpers.remove(index);\n    }\n  };\n\n  return (\n    <div>\n      <Title>Education experience</Title>\n      <SubTitle>Input your study data</SubTitle>\n      <Formik\n        initialValues={{ study: formData.study }}\n        validationSchema={schema}\n        onSubmit={(values) => {\n          if (values.study.length) {\n            dispatch({ type: \"addStudy\", data: values.study });\n            setFormStep(3);\n          } else {\n            window.alert(\"Add at list 1 study\");\n          }\n        }}\n        render={({ values }) => (\n          <FormStyled>\n            <FieldArray\n              name=\"study\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.study.map((_, index) => {\n                    return (\n                      <FormBlock key={index}>\n                        <Label>\n                          <ErrorMessage\n                            name={`study.${index}.name`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field type=\"text\" name={`study.${index}.name`} />\n                          <p> Name of school</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`study.${index}.specialty`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field\n                            type=\"text\"\n                            name={`study.${index}.specialty`}\n                          />\n                          <p>Specialty</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`study.${index}.startDate`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field\n                            type=\"date\"\n                            name={`study.${index}.startDate`}\n                            max={getToday()}\n                          />\n                          <p>Start Date</p>\n                        </Label>\n                        <Label>\n                          <ErrorMessage\n                            name={`study.${index}.finishDate`}\n                            component=\"span\"\n                            className=\"field-error\"\n                          />\n                          <Field\n                            type=\"date\"\n                            name={`study.${index}.finishDate`}\n                            max={getToday()}\n                          />\n                          <p> Finish Date</p>\n                        </Label>\n                        <Button\n                          onClick={() => handleRemove(arrayHelpers, index)} // remove a friend from the list\n                        >\n                          Remove\n                        </Button>\n                      </FormBlock>\n                    );\n                  })}\n                  <BottomBlock>\n                    <Button onClick={() => setFormStep(1)}>GO BACK</Button>\n                    <Button\n                      type=\"button\"\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: \"\",\n                          specialty: \"\",\n                          startDate: \"\",\n                          finishDate: \"\",\n                        })\n                      }\n                    >\n                      Add a study\n                    </Button>\n\n                    <div>\n                      <Button type=\"submit\">SAVE AND GO TO NEXT PAGE</Button>\n                    </div>\n                  </BottomBlock>\n                </div>\n              )}\n            />\n          </FormStyled>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default StudyPage;\n","import React, { useContext } from \"react\";\nimport { myContext } from \"../contextProvider\";\nimport styled from \"styled-components\";\n\nimport { Title, Button } from \"../components/common\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 1000px;\n  margin: 10px auto;\n  padding: 5px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  background-color: #333;\n`;\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 290px;\n  margin: 5px;\n  padding: 10px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  box-sizing: border-box;\n  background-color: #fff;\n`;\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 695px;\n  margin: 5px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  padding: 10px;\n  box-sizing: border-box;\n  background-color: #fff;\n`;\nconst Logo = styled.div`\n  background-color: #345456;\n  width: 200px;\n  border-radius: 50%50%;\n  margin: 10px auto;\n  font-size: 70px;\n  font-weight: bold;\n  text-transform: uppercase;\n  text-align: center;\n  line-height: 200px;\n`;\nconst Name = styled(Title)`\n  text-align: left;\n  text-transform: uppercase;\n`;\nconst Link = styled.a`\n  font-size: 20px;\n  color: #000;\n  margin: 5px 0;\n  text-decoration: none;\n  cursor: pointer;\n`;\nconst ItemWrapper = styled.div`\n  position: relative;\n  font-size: 20px;\n  border: 1px solid #333;\n  margin: 5px 0;\n  padding: 10px;\n  border-radius: 10px;\n  span {\n    font-weight: bold;\n    margin-left: 10px;\n  }\n`;\nconst Count = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 24px;\n  padding: 5px;\n  font-size: 20px;\n  font-weight: bold;\n  border: 3px solid #333;\n  text-align: center;\n  border-radius: 50%;\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 1000px;\n  margin: 10px auto;\n`;\n\nconst ResumePage = ({ setFormStep }) => {\n  const { formData } = useContext(myContext);\n  return (\n    <>\n      <Title>RESUME</Title>\n      <Wrapper>\n        <LeftSide>\n          <Logo>{formData.personal.firstName.charAt(0)}</Logo>\n          <Name>\n            {formData.personal.firstName}\n            <br /> {formData.personal.lastName}\n          </Name>\n          <Link href={`mailto:${formData.personal.email}`}>\n            {formData.personal.email}\n          </Link>\n          <Link href={`tel:${formData.personal.phone}`}>\n            {formData.personal.phone}\n          </Link>\n        </LeftSide>\n        <Main>\n          <Title>STUDYS</Title>\n          {formData.study.map((item, index) => {\n            return (\n              <ItemWrapper>\n                <p>\n                  School: <span>{item.name}</span>\n                </p>\n                <p>\n                  Specialty: <span>{item.specialty}</span>\n                </p>\n                <p>\n                  Study period:\n                  <span>\n                    {item.startDate.replaceAll(\"-\", \"/\")} -{\" \"}\n                    {item.finishDate.replaceAll(\"-\", \"/\")}\n                  </span>\n                </p>\n                <Count>{index + 1}</Count>\n              </ItemWrapper>\n            );\n          })}\n          <Title>JOBS</Title>\n          {formData.jobs.map((item, index) => {\n            return (\n              <ItemWrapper>\n                <p>\n                  Company: <span>{item.name}</span>\n                </p>\n                <p>\n                  Position: <span>{item.position}</span>\n                </p>\n                <p>\n                  Work period:\n                  <span>\n                    {item.startDate.replaceAll(\"-\", \"/\")} -{\" \"}\n                    {item.finishDate.replaceAll(\"-\", \"/\")}\n                  </span>\n                </p>\n                <Count>{index + 1}</Count>\n              </ItemWrapper>\n            );\n          })}\n        </Main>\n      </Wrapper>\n      <ButtonWrapper>\n        <Button onClick={() => setFormStep(2)}>GO BACK</Button>\n      </ButtonWrapper>\n    </>\n  );\n};\n\nexport default ResumePage;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport ContextProvider from \"./contextProvider\";\nimport FormPersonal from \"./pages/PersonalPage\";\nimport JobsPage from \"./pages/JobsPage\";\nimport StudyPage from \"./pages/StudyPage\";\nimport ResumePage from \"./pages/ResumePage\";\n\nconst App = () => {\n  const [formStep, setFormStep] = useState(0);\n\n  return (\n    <React.StrictMode>\n      <ContextProvider>\n        {formStep === 0 && <FormPersonal setFormStep={setFormStep} />}\n        {formStep === 1 && <JobsPage setFormStep={setFormStep} />}\n        {formStep === 2 && <StudyPage setFormStep={setFormStep} />}\n        {formStep === 3 && <ResumePage setFormStep={setFormStep} />}\n      </ContextProvider>\n    </React.StrictMode>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// {/* <Route path=\"/form_study\" children={<FormStudy />} /> */}\n//    {/* <Route path=\"/resume\" children={<Resume />} /> */}\n"],"sourceRoot":""}